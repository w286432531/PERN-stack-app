// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DATABASE")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model SiteMain {
  id                Int     @id @default(autoincrement())
  siteName          String?
  brandImageUrl     String?
  onlineOrderToggle Boolean @default(false)
  isOpen            Boolean @default(true)
}

model BusinessHour {
  id    Int    @id @default(autoincrement())
  day   String
  hours String
}

model UserType {
  id              Int     @id @default(autoincrement())
  name            String
  alternativeName String?
  Users           User[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  firstName String
  lastName  String
  userType  UserType @relation(fields: [typeId], references: [id])
  typeId    Int
  phone     String?
  createdAt DateTime @default(now())
  cart      Json?
  address   Address?
  orders    Order[]
}

model Address {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [userId], references: [id])
  userId     Int     @unique
  address1   String?
  address2   String?
  state      String?
  city       String?
  zipCode    String?
  Latitude   String?
  Longtitude String?
}

model Order {
  id                  Int           @id @default(autoincrement())
  user                User          @relation(fields: [userId], references: [id])
  userId              Int
  orderDate           DateTime      @default(now())
  total               Decimal       @db.Decimal(12, 2)
  paymentMethod       String
  paymentConfirmation String
  discountAmount      Decimal       @default(0) @db.Decimal(12, 2)
  paymentAmount       Decimal       @db.Decimal(12, 2)
  OrderItems          OrderedItem[]
}

model OrderedItem {
  id             Int                @unique @default(autoincrement())
  order          Order              @relation(fields: [orderId], references: [id])
  orderId        Int
  itemOption     ItemOption         @relation(fields: [itemOptionId], references: [id])
  itemOptionId   Int
  addOns         OrderedItemAddOn[]
  itemTotal      Decimal            @db.Decimal(12, 2)
  quantity       Int                @default(1)
  specialRequest String?

  @@id([id, orderId, itemOptionId])
}

model OrderedItemAddOn {
  orderedItem   OrderedItem @relation(fields: [orderedItemId], references: [id])
  orderedItemId Int
  addOn         AddOn       @relation(fields: [addOnId], references: [id])
  addOnId       Int
  quantity      Int         @default(1)

  @@id([orderedItemId, addOnId])
}

model Item {
  id              Int              @id @default(autoincrement())
  name            String
  alternativeName String?
  description     String?
  itemCategory    Category         @relation(fields: [categoryId], references: [id])
  categoryId      Int
  imageUrl        String?
  isAvailable     Boolean          @default(true)
  options         ItemOption[]
  ingredients     ItemIngredient[]
  addOns          ItemAddOn[]
}

model Category {
  id              Int     @id @default(autoincrement())
  name            String
  alternativeName String?
  items           Item[]
}

model Ingredient {
  id              Int              @id @default(autoincrement())
  name            String
  alternativeName String?
  items           ItemIngredient[]
}

model ItemIngredient {
  item         Item       @relation(fields: [itemId], references: [id])
  itemId       Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int

  @@id([itemId, ingredientId])
}

model Option {
  id              Int          @id @default(autoincrement())
  name            String
  alternativeName String?
  description     String?
  items           ItemOption[]
}

model ItemOption {
  id           Int           @unique @default(autoincrement())
  item         Item          @relation(fields: [itemId], references: [id])
  itemId       Int
  option       Option        @relation(fields: [optionId], references: [id])
  optionId     Int
  price        Decimal       @db.Decimal(12, 2)
  description  String?
  OrderedItems OrderedItem[]

  @@id([id, itemId])
}

model AddOn {
  id              Int                @id @default(autoincrement())
  name            String
  description     String?
  alternativeName String?
  price           Decimal            @default(0) @db.Decimal(12, 2)
  items           ItemAddOn[]
  orderedItems    OrderedItemAddOn[]
}

model ItemAddOn {
  item    Item  @relation(fields: [itemId], references: [id])
  itemId  Int
  addOn   AddOn @relation(fields: [addOnId], references: [id])
  addOnId Int

  @@id([itemId, addOnId])
}
